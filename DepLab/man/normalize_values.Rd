% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_wrangling.R
\name{normalize_values}
\alias{normalize_values}
\title{Normalize measured values}
\usage{
normalize_values(long.df, norm.type = c("fraction", "spike-in"),
  prot.identifier = NULL, std.df = NULL)
}
\arguments{
\item{long.df}{data.frame with unique values per protein, expt. ID, 
measurement and fraction; preferably for only one measurement.}

\item{norm.type}{choose the type of normalization to carried out; currently,
there are two possibilities:
\itemize{
\item 'fraction': normalize the measurements per protein across all fractions
 ("row-wise")
\item 'spike-in': normalize the measurements per fraction across all proteins
 ("column-wise")
}}

\item{prot.identifier}{specify the name that identifies single proteins,
e.g. "gene_symbol"; only necessary if norm.type == "fraction"}

\item{std.df}{long data.frame with values for the spike-in control with 'value',
'measurement', and 'fraction'; this should only be the data for a
 \emph{single} protein, though.}
}
\value{
data.table with normalized intensity values
}
\description{
This function allows for the normalization of, e.g., raw intensity values
collected from the MaxQuant output.
Currently, two normalization schemes are implemented.
}
\details{
\bold{example usage:}

## fraction normalization 
mq.y.1 <- read.MQ.data(filename = system.file("extdata", "test_data", "proteinGroups_100mM_new.txt", package = "DepLab"), 
                       expt.id = "100mM", data.subset = "poi", organism = "yeast")
mq.y.3 <- read.MQ.data(filename = system.file("extdata", "test_data", "proteinGroups_300mM_new.txt", package = "DepLab"), 
                       expt.id = "300mM", data.subset = "poi", organism = "yeast")
mqcombi <- rbind(mq.y.1, mq.y.3)
fraction.norm <- normalize_values(long.df = subset(mqcombi, measurement == "raw.intensity"),
                                 norm.type = "fraction", prot.identifier = "gene_symbol")

## spike-in normalization
# first, read in the values for the spike-in (here: trypsin) 
y.std.1 <- read.MQ.data(filename = system.file("extdata", "test_data", "proteinGroups_100mM_new.txt", package = "DepLab"), 
                       expt.id = "100mM", data.subset = "trypsin", organism = NULL)
y.std.3 <- read.MQ.data(filename = system.file("extdata", "test_data", "proteinGroups_300mM_new.txt", package = "DepLab"),
                      expt.id = "300mM", data.subset = "trypsin", organism = NULL)
std.combi <- rbind(y.std.1, y.std.3)

# the subsetting for one type of measurement is absolutely required
std.norm <- normalize_values(long.df = subset(mqcombi, measurement == "raw.intensity"), 
               norm.type = "spike-in", prot.identifier = "gene_symbol", 
               std.df = subset(std.combi, measurement == "raw.intensity"))
}
\seealso{
\code{\link{norm_by_fraction}},
\code{\link{norm_by_spikeIn}}
}

